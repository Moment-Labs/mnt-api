swagger: "2.0"
info:
  version: "0.0.1"
  title: Moment Labs API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:

  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /users:
    # our controller name
    x-swagger-router-controller: user
    get:
      operationId: query
      description: get the users list
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUsersResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
    post:
      operationId: create
      description: add a new user
      # movie info to be stored
      parameters:
        - name: first name
          description: Users first name
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /users/{id}:
    # our controller name
    x-swagger-router-controller: user
    get:
      operationId: get
      description: get a user
      # define the type of response for Success "200" and Error
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
    put:
      operationId: update
      description: update a user
      # define the parameters
      parameters:
        - name: id
          description: User id
          type: string
          in: path
          required: true
        
            
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
    delete:
      operationId: remove
      description: delete a user
      # define the parameters
      parameters:
        - name: id
          description: User id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string
        description: a short comment 
    required:
      - success
      - description
  User:
    type: object
    properties:
      id:
        type: string
      first_name:
        type: string
      email:
        type: string
      last_name:
        type: string
    required:
      - first_name
      - last_name
      - email
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
        
  GetUserResponse:
    required:
      - id
      - first_name
      - last_name
      - email
    properties:
      id:
        type: string
      first_name:
        type: string
      email:
        type: string
      last_name:
        type: string
  
  GetUsersResponse:
    required:
      - users
    properties:
      # The array of users
      users:
        type: array
        items: 
          type: object
          properties:
            id:
              type: string
            first_name:
              type: string
            email:
              type: string
            last_name:
              type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
